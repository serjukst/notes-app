{"version":3,"sources":["hooks/http.hook.js","hooks/message.hook.js","context/AuthContext.js","pages/AuthPage.js","components/Loader.js","hooks/input.hook.js","components/Note.js","pages/DetailPage.js","components/NotesList.js","components/CreateNote.js","pages/NotesPage.js","components/User.js","pages/UserPage.js","components/Navbar.js","App.js","hooks/auth.hook.js","routes.js","serviceWorker.js","index.js"],"names":["useHttp","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","JSON","stringify","fetch","response","json","data","ok","Error","message","console","log","clearError","useMessage","text","window","M","toast","html","AuthContext","createContext","token","userId","login","noop","logout","isAuthenticated","AuthPage","auth","useContext","username","password","form","setForm","useEffect","updateTextFields","changeHandler","event","target","name","value","registerHandler","loginHandler","jwt_token","className","placeholder","id","type","onChange","htmlFor","style","marginRight","onClick","disabled","Loader","display","justifyContent","paddingTop","useInput","initialValue","setValue","reset","bind","Note","note","completed","setCompleted","history","useHistory","completehandler","_id","Authorization","prev","deteteHandler","push","saveHandler","checked","DetailPage","setNote","noteId","useParams","getNote","fetched","NotesList","notes","length","map","key","readOnly","href","CreateNote","pressHandler","onKeyPress","NotesPage","setNotes","fetchNotes","User","user","oldPass","bindOldPass","resetOldPass","newPass","bindNewPass","resetNewPass","deleteUserHandler","changePassHandler","oldPassword","newPassword","Date","createdDate","toLocaleString","UserPage","setUser","getUser","Navbar","padding","to","preventDefault","App","setToken","ready","setReady","setUserId","jwtToken","localStorage","setItem","removeItem","parse","getItem","useAuth","routes","path","exact","useRouters","Provider","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.80de3fe0.chunk.js","sourcesContent":["import { useState, useCallback } from 'react';\r\n\r\nexport const useHttp = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const request = useCallback(\r\n    async (url, method = 'GET', body = null, headers = {}) => {\r\n        setLoading(true)\r\n      try {\r\n        if(body) {\r\n          body = JSON.stringify(body);\r\n          headers['Content-Type'] = 'application/json';\r\n        }\r\n        const response = await fetch(url, { method, body, headers });\r\n        const data = await response.json();\r\n\r\n        if(!response.ok) {\r\n            throw new Error(data.message || 'Something went wrong')\r\n        }\r\n\r\n        setLoading(false)\r\n\r\n        return data;\r\n      } catch (e) {\r\n        console.log('CatchError', e.message);\r\n          setLoading(false);\r\n          setError(e.message)\r\n          throw e\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = useCallback(() => setError(null), []);\r\n\r\n  return { loading, request, error, clearError };\r\n};\r\n","import { useCallback } from 'react';\r\n\r\nexport const useMessage = () => {\r\n  return useCallback(text => {\r\n    if (window.M && text) {\r\n      window.M.toast({ html: text });\r\n    }\r\n  }, []);\r\n};\r\n","import { createContext } from 'react';\r\n\r\nfunction noop(){}\r\n\r\nexport const AuthContext = createContext({\r\n    token: null,\r\n    userId: null,\r\n    login: noop(),\r\n    logout: noop(),\r\n    isAuthenticated: false\r\n})","import React, { useState, useEffect, useContext } from 'react';\r\nimport { useHttp } from '../hooks/http.hook';\r\nimport { useMessage } from '../hooks/message.hook';\r\nimport { AuthContext } from '../context/AuthContext';\r\n\r\nexport default function AuthPage() {\r\n  const auth = useContext(AuthContext);\r\n  const message = useMessage();\r\n  const { loading, error, request, clearError } = useHttp();\r\n  const [form, setForm] = useState({\r\n    username: '',\r\n    password: '',\r\n  });\r\n\r\n  useEffect(() => {\r\n    message(error);\r\n    clearError();\r\n  }, [error, message, clearError]);\r\n\r\n  useEffect( () => {\r\n    window.M.updateTextFields();\r\n  }, [])\r\n\r\n  const changeHandler = event => {\r\n    setForm({ ...form, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const registerHandler = async () => {\r\n    try {\r\n      const data = await request('/api/auth/register', 'POST', { ...form });\r\n      message(data.message);\r\n    } catch (e) {}\r\n  };\r\n\r\n  const loginHandler = async () => {\r\n    try {\r\n      const data = await request('/api/auth/login', 'POST', { ...form });\r\n\r\n      auth.login( data.jwt_token, data.userId);\r\n    } catch (e) {}\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col s6 offset-s3\">\r\n        <h2 className=\"center\">Notes app</h2>\r\n        <div className=\"card teal darken-3\">\r\n          <div className=\"card-content white-text\">\r\n            <span className=\"card-title\">Authorization</span>\r\n            <div>\r\n              <div className=\"input-field\">\r\n                <input\r\n                  placeholder=\"Enter username\"\r\n                  id=\"username\"\r\n                  type=\"text\"\r\n                  name=\"username\"\r\n                  value={form.username}\r\n                  onChange={changeHandler}\r\n                />\r\n                <label htmlFor=\"username\">Username</label>\r\n              </div>\r\n              <div className=\"input-field\">\r\n                <input\r\n                  placeholder=\"Enter password\"\r\n                  id=\"password\"\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  value={form.password}\r\n                  onChange={changeHandler}\r\n                />\r\n                <label htmlFor=\"username\">Password</label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"card-action\">\r\n            <button\r\n              className=\"btn teal\"\r\n              style={{ marginRight: 10 }}\r\n              onClick={loginHandler}\r\n              disabled={loading}\r\n            >\r\n              Login\r\n            </button>\r\n            <button\r\n              className=\"btn grey lighten-1 black-text\"\r\n              onClick={registerHandler}\r\n              disabled={loading}\r\n            >\r\n              Registration\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Loader() {\r\n  return (\r\n    <div style={{display: 'flex', justifyContent: 'center', paddingTop: '2rem'}}>\r\n      <div className=\"preloader-wrapper active\">\r\n        <div className=\"spinner-layer spinner-red-only\">\r\n          <div className=\"circle-clipper left\">\r\n            <div className=\"circle\" />\r\n          </div>\r\n          <div className=\"gap-patch\">\r\n            <div className=\"circle\" />\r\n          </div>\r\n          <div className=\"circle-clipper right\">\r\n            <div className=\"circle\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { useState } from 'react';\r\n\r\nexport const useInput = initialValue => {\r\n  const [value, setValue] = useState(initialValue);\r\n\r\n  return {\r\n    value,\r\n    setValue,\r\n    reset: () => setValue(''),\r\n    bind: {\r\n      value,\r\n      onChange: event => {\r\n        setValue(event.target.value);\r\n      },\r\n    },\r\n  };\r\n};\r\n","import React, { useState, useContext } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { AuthContext } from '../context/AuthContext';\r\nimport { useHttp } from '../hooks/http.hook';\r\nimport { useInput } from '../hooks/input.hook';\r\n\r\nexport default function Note({ note }) {\r\n  const [completed, setCompleted] = useState(note.completed);\r\n  const { value, bind} = useInput(note.text)\r\n  const { request } = useHttp();\r\n  const { token } = useContext(AuthContext);\r\n  const history = useHistory();\r\n\r\n  const completehandler = async () => {\r\n    try {\r\n      await request(`/api/notes/${note._id}`, 'PATCH', null, {\r\n        Authorization: `Bearer ${token}`,\r\n      });\r\n      setCompleted(prev => !prev);\r\n    } catch (e) {}\r\n  };\r\n\r\n  const deteteHandler = async () => {\r\n    try {\r\n      await request(`/api/notes/${note._id}`, 'DELETE', null, {\r\n        Authorization: `Bearer ${token}`,\r\n      });\r\n      history.push('/notes');\r\n    } catch (e) {}\r\n  };\r\n\r\n  const saveHandler = async () => {\r\n    try {\r\n      await request(\r\n        `/api/notes/${note._id}`,\r\n        'PUT',\r\n        { text: value },\r\n        {\r\n          Authorization: `Bearer ${token}`,\r\n        }\r\n      );\r\n      history.push('/notes');\r\n    } catch (e) {}\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\" id={note._id}>\r\n      <h5 className=\"center\">Edit note:</h5>\r\n      <div className=\"col s8 offset-s2 flex space-between\">\r\n        <div className=\"flex flex-grow m-r-1\">\r\n          <label>\r\n            <input\r\n              type=\"checkbox\"\r\n              onChange={completehandler}\r\n              checked={completed}\r\n            />\r\n            <span />\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            disabled={completed}\r\n            {...bind}\r\n          />\r\n        </div>\r\n        <div>\r\n          <button\r\n            onClick={saveHandler}\r\n            className=\"waves-effect waves-teal btn m-r-1\"\r\n          >\r\n            <i className=\"material-icons\">save</i>\r\n          </button>\r\n          <button\r\n            onClick={deteteHandler}\r\n            className=\"waves-effect waves-teal btn\"\r\n          >\r\n            <i className=\"material-icons\">delete</i>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useCallback, useContext, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { AuthContext } from '../context/AuthContext';\r\nimport { useHttp } from '../hooks/http.hook';\r\n\r\nimport Loader from '../components/Loader';\r\nimport Note from '../components/Note';\r\n\r\nexport default function DetailPage() {\r\n  const { token } = useContext(AuthContext);\r\n  const { request, loading } = useHttp();\r\n  const [note, setNote] = useState(null);\r\n  const noteId = useParams().id;\r\n\r\n  const getNote = useCallback(async () => {\r\n    try {\r\n        const fetched = await request(`/api/notes/${noteId}`, 'GET', null, {\r\n            Authorization: `Bearer ${token}`\r\n        });\r\n\r\n        setNote(fetched)\r\n    } catch (e) {}\r\n  }, [token, noteId, request]);\r\n\r\n  useEffect( () => {\r\n    getNote()\r\n  }, [getNote])\r\n\r\n  if(loading) {\r\n      return <Loader />\r\n  }\r\n\r\n  return (\r\n    <>\r\n      { !loading && note && <Note note={note}/>}\r\n    </>\r\n  )\r\n  \r\n}\r\n","import React from 'react';\r\n\r\nexport default function NotesList({ notes }) {\r\n  if (notes.length === 0) {\r\n    return <h5 className=\"center\">You haven`t any notes</h5>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col s8 offset-s2\">\r\n        <table className=\"centered\">\r\n          <thead>\r\n            <tr>\r\n              <th>Completed</th>\r\n              <th>Note</th>\r\n              <th>Options</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {notes.map(note => {\r\n              return (\r\n                <tr key={note._id}>\r\n                  <td>\r\n                    <label>\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        checked={note.completed}\r\n                        readOnly\r\n                      />\r\n                      <span />\r\n                    </label>\r\n                  </td>\r\n                  <td>{note.text}</td>\r\n                  <td>\r\n                    <a\r\n                      href={`/notes/${note._id}`}\r\n                      className=\"waves-effect waves-light btn\"\r\n                    >\r\n                      <i className=\"material-icons\">edit</i>\r\n                    </a>\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useContext } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { AuthContext } from '../context/AuthContext';\r\nimport { useHttp } from '../hooks/http.hook';\r\nimport { useInput } from '../hooks/input.hook';\r\n\r\nexport default function CreateNote() {\r\n  const { token } = useContext(AuthContext);\r\n  const { request, loading } = useHttp();\r\n  const { value, bind, reset } = useInput('');\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    window.M.updateTextFields();\r\n  }, []);\r\n\r\n  const pressHandler = async event => {\r\n    if (event.key === 'Enter') {\r\n      try {\r\n        await request(\r\n          `/api/notes`,\r\n          'POST',\r\n          { text: value },\r\n          {\r\n            Authorization: `Bearer ${token}`,\r\n          }\r\n        );\r\n        reset();\r\n        history.push('/') // TODO rewfite\r\n      } catch (e) {}\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col s8 offset-s2\" style={{ paddingTop: '2rem' }}>\r\n        <div className=\"input-field\">\r\n          <input\r\n            placeholder=\"Note\"\r\n            id=\"note\"\r\n            type=\"text\"\r\n            {...bind}\r\n            onKeyPress={pressHandler}\r\n            disabled={loading}\r\n          />\r\n          <label htmlFor=\"note\">Add note</label>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useCallback, useContext, useEffect } from 'react';\r\nimport { AuthContext } from '../context/AuthContext';\r\nimport { useHttp } from '../hooks/http.hook';\r\n\r\nimport Loader from '../components/Loader';\r\nimport NotesList from '../components/NotesList';\r\nimport CreateNote from '../components/CreateNote';\r\n\r\nexport default function NotesPage() {\r\n  const [notes, setNotes] = useState([]);\r\n  const { loading, request } = useHttp();\r\n  const { token } = useContext(AuthContext);\r\n\r\n  const fetchNotes = useCallback(async () => {\r\n    try {\r\n      const fetched = await request('/api/notes', 'GET', null, {\r\n        Authorization: `Bearer ${token}`,\r\n      });\r\n\r\n      setNotes(fetched);\r\n    } catch (e) {}\r\n  }, [token, request]);\r\n\r\n  useEffect(() => {\r\n    fetchNotes();\r\n  }, [fetchNotes]);\r\n\r\n  if (loading) {\r\n    return <Loader />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {!loading && (\r\n        <>\r\n          <CreateNote /> <NotesList notes={notes} />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { AuthContext } from '../context/AuthContext';\r\nimport { useHttp } from '../hooks/http.hook';\r\nimport { useInput } from '../hooks/input.hook';\r\nimport { useMessage } from '../hooks/message.hook';\r\n\r\nexport default function User({ user }) {\r\n  const { request, loading } = useHttp();\r\n  const message = useMessage();\r\n  const { token, logout } = useContext(AuthContext);\r\n  const { value: oldPass, bind: bindOldPass, reset: resetOldPass } = useInput('');\r\n  const { value: newPass, bind: bindNewPass, reset: resetNewPass } = useInput('');\r\n\r\n  const deleteUserHandler = async () => {\r\n    try {\r\n      await request(\r\n        `/api/users/me`,\r\n        'DELETE', null,\r\n        {\r\n          Authorization: `Bearer ${token}`,\r\n        }\r\n      );\r\n      message('User deleted');\r\n      logout();\r\n    } catch (e) {\r\n      message(e.message);\r\n    }\r\n  };\r\n\r\n  const changePassHandler = async () => {\r\n    try {\r\n      await request(\r\n        `/api/users/me`,\r\n        'PATCH',\r\n        {\r\n          oldPassword: oldPass,\r\n          newPassword: newPass,\r\n        },\r\n        {\r\n          Authorization: `Bearer ${token}`,\r\n        }\r\n      );\r\n      resetOldPass();\r\n      resetNewPass();\r\n      message('Password changed');\r\n    } catch (e) {\r\n      message(e.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <table className=\"centered\">\r\n        <thead>\r\n          <tr>\r\n            <th>User Name</th>\r\n            <th>Member since</th>\r\n            <th>Options</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td>{user.username}</td>\r\n            <td>{new Date(user.createdDate).toLocaleString()}</td>\r\n            <td>\r\n              <button className=\"waves-effect waves-light btn\" onClick={deleteUserHandler} disabled={loading}>\r\n                Delete profile\r\n              </button>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      <div className=\"bordered\">\r\n        <h6>You can change password</h6>\r\n        <div className=\"row\">\r\n          <div className=\"input-field col s12\">\r\n            <input\r\n              id=\"oldPassword\"\r\n              type=\"password\"\r\n              className=\"validate\"\r\n              {...bindOldPass}\r\n            />\r\n            <label htmlFor=\"oldPassword\">Old password</label>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"input-field col s12\">\r\n            <input\r\n              id=\"newPassword\"\r\n              type=\"password\"\r\n              className=\"validate\"\r\n              {...bindNewPass}\r\n            />\r\n            <label htmlFor=\"newPassword\">New password</label>\r\n          </div>\r\n          <div className=\"row\">\r\n            <button\r\n              className=\"waves-effect waves-light btn\"\r\n              onClick={changePassHandler}\r\n              disabled={loading}\r\n            >\r\n              Change password\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useCallback, useContext, useEffect } from 'react';\r\nimport { AuthContext } from '../context/AuthContext';\r\nimport { useHttp } from '../hooks/http.hook';\r\n\r\nimport Loader from '../components/Loader';\r\nimport User from '../components/User';\r\n\r\nexport default function UserPage() {\r\n  const { token } = useContext(AuthContext);\r\n  const { request, loading } = useHttp();\r\n  const [user, setUser] = useState(null);\r\n\r\n  const getUser = useCallback(async () => {\r\n    try {\r\n        const fetched = await request('api/users/me', 'GET', null, {\r\n            Authorization: `Bearer ${token}`\r\n        });\r\n\r\n        setUser(fetched)\r\n    } catch (e) {}\r\n  }, [token, request]);\r\n\r\n  useEffect( () => {\r\n    getUser()\r\n  }, [getUser])\r\n\r\n  if(loading) {\r\n      return <Loader />\r\n  }\r\n\r\n  return (\r\n    <>\r\n      { !loading && user && <User user={user}/>}\r\n    </>\r\n  )\r\n  \r\n}\r\n","import React, { useContext } from 'react';\r\nimport { NavLink, useHistory } from 'react-router-dom';\r\nimport { AuthContext } from '../context/AuthContext';\r\n\r\nexport default function Navbar() {\r\n  const history = useHistory();\r\n  const auth = useContext(AuthContext);\r\n\r\n  const logoutHandler = event => {\r\n    event.preventDefault();\r\n    auth.logout();\r\n    history.push('/');\r\n  };\r\n\r\n  return (\r\n    <nav>\r\n      <div className=\"nav-wrapper teal\" style={{ padding: '0 2rem' }}>\r\n        <span className=\"brand-logo left\">Notes app</span>\r\n        <ul id=\"nav-mobile\" className=\"right\">\r\n          <li>\r\n            <NavLink to=\"/notes\">Notes</NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink to=\"/user\">Profile</NavLink>\r\n          </li>\r\n          <li>\r\n            <a href=\"/\" onClick={logoutHandler}>\r\n              Logout\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport { useRouters } from './routes';\r\nimport { useAuth } from './hooks/auth.hook';\r\nimport { AuthContext } from './context/AuthContext';\r\nimport Navbar from './components/Navbar';\r\nimport Loader from './components/Loader';\r\nimport 'materialize-css';\r\n\r\nfunction App() {\r\n  const { token, userId, login, logout, ready } = useAuth();\r\n  const isAuthenticated = !!token;\r\n  const routes = useRouters(isAuthenticated);\r\n\r\n  if (!ready) {\r\n    return <Loader />;\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        token,\r\n        userId,\r\n        login,\r\n        logout,\r\n        isAuthenticated,\r\n      }}\r\n    >\r\n      <Router>\r\n        {isAuthenticated && <Navbar />}\r\n        <div className=\"container\">{routes}</div>\r\n      </Router>\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { useState, useCallback, useEffect } from 'react';\r\n\r\nconst storageName = 'userData';\r\n\r\nexport const useAuth = () => {\r\n  const [token, setToken] = useState(null);\r\n  const [ready, setReady] = useState(false);\r\n  const [userId, setUserId] = useState(null);\r\n\r\n  const login = useCallback((jwtToken, id) => {\r\n    setToken(jwtToken);\r\n    setUserId(id);\r\n\r\n    localStorage.setItem(storageName, JSON.stringify({ userId: id, token: jwtToken }));\r\n  }, []);\r\n\r\n  const logout = useCallback(() => {\r\n    setToken(null);\r\n    setUserId(null);\r\n    localStorage.removeItem(storageName);\r\n  }, []);\r\n\r\n  useEffect( () => {\r\n      const data = JSON.parse(localStorage.getItem(storageName));\r\n\r\n      if(data && data.token) {\r\n          login(data.token, data.userId)\r\n      }\r\n\r\n      setReady(true);\r\n  }, [login]\r\n  )\r\n\r\n  return { login, logout, token, userId, ready };\r\n};\r\n","import React from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport AuthPage from './pages/AuthPage';\r\n\r\nimport DetailPage from './pages/DetailPage';\r\nimport NotesPage from './pages/NotesPage';\r\nimport UserPage from './pages/UserPage';\r\n\r\nexport const useRouters = isAuthenticated => {\r\n  if (isAuthenticated) {\r\n    return (\r\n      <Switch>\r\n        <Route path=\"/notes\" exact>\r\n          <NotesPage />\r\n        </Route>\r\n        <Route path=\"/notes/:id\">\r\n          <DetailPage />\r\n        </Route>\r\n        <Route path=\"/user\">\r\n          <UserPage />\r\n        </Route>\r\n        <Redirect to=\"/notes\" />\r\n      </Switch>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Switch>\r\n        <Route path=\"/\" exact>\r\n            <AuthPage/>\r\n        </Route>\r\n        <Redirect to=\"/\" />\r\n    </Switch>);\r\n};\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}